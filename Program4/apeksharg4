/******************************************************************************

Problem 4
Given an unsorted array A of size N that contains only non-negative integers, 
find a continuous sub-array which adds to a given number S.
In case of multiple subarrays, return the subarray which comes first 
on moving from left to right.

Example 1:
Input:
N = 5, S = 12
A[] = {1,2,3,7,5}
Output: 2 4
Explanation: The sum of elements 
from 2nd position to 4th position 
is 12.
 
Example 2:
Input:
N = 10, S = 15
A[] = {1,2,3,4,5,6,7,8,9,10}
Output: 1 5
Explanation: The sum of elements 
from 1st position to 5th position
is 15.

*******************************************************************************/
#include <iostream>

using namespace std;

int main()
{
    int i,j ,n,a[20],target=0,count=0;
    cout<<"enter the number of elements"<<endl;
    cin>>n;
    cout<<"enter the array elements:"<<endl;
    for(i=0;i<n;i++)
    {
    cin>>a[i];
    }
    cout<<"the array elements are:"<<endl;
    for(i=0;i<n;i++)
    {
     cout<<a[i]<<" ";
    }
    cout<<endl;
    cout<<"enter the target:"<<endl;
    cin>>target;
    int sum=0;count=0;
    for(i=0;i<n;i++)
    {
        sum=0;
        for(j=i;j<n;j++)
        {
            sum=sum+a[j];
            if(sum==target)
            {
                cout<<"sum found from"<< i+1<< " to "<<j+1<<endl;
                count=count+1;
            }
            
        }
    }
    if(count<=1)
    {cout<<"no elements add upto target"<<endl;
    }
        return 0;
}

